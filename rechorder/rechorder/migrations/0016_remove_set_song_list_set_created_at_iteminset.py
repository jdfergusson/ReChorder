# Generated by Django 4.0.6 on 2023-11-05 17:16

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone

all_sets = {}


def backup_sets(apps, schema_editor):
    print("\nBacking up sets!")
    sets = apps.get_model('rechorder', 'Set')
    for this_set in sets.objects.all():
        all_sets[this_set.id] = this_set.song_list
    print(all_sets)


def restore_sets(apps, schema_editor):
    print("\nRestoring Sets!")
    Sets = apps.get_model('rechorder', 'Set')
    ItemInSet = apps.get_model('rechorder', 'ItemInSet')
    Song = apps.get_model('rechorder', 'Song')
    for set_id in all_sets:
        try:
            song_list = all_sets[set_id]
            for idx, song in enumerate(song_list):
                new_item_in_set = ItemInSet(
                    index_in_set=idx,
                    sounding_key_index=song['key_index'],
                    notes=song['notes'],
                    song=Song.objects.get(pk=song['id']),
                    set=Sets.objects.get(pk=set_id),
                )
                new_item_in_set.save()
            print("Restored set {}".format(set_id))
        except Exception:
            continue


def set_created_at(apps, schema_editor):
    sets = apps.get_model('rechorder', 'Set')
    for set in sets.objects.all():
        set.created_at = set.last_updated
        set.save()


class Migration(migrations.Migration):
    dependencies = [
        ('rechorder', '0015_song_ccli_number'),
    ]

    operations = [
        migrations.RunPython(backup_sets, migrations.RunPython.noop),
        migrations.RemoveField(
            model_name='set',
            name='song_list',
        ),
        migrations.AddField(
            model_name='set',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='ItemInSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index_in_set', models.IntegerField()),
                ('sounding_key_index', models.IntegerField()),
                ('notes', models.TextField()),
                ('set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rechorder.set')),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rechorder.song')),
            ],
        ),
        migrations.RunPython(restore_sets, migrations.RunPython.noop),
        migrations.RunPython(set_created_at, migrations.RunPython.noop),
    ]
